<Popup
	x:Class="Debugger.AddIn.Tooltips.DebuggerTooltipControl"
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:aero="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero"
	xmlns:debugging="clr-namespace:Debugger.AddIn.Tooltips"
	xmlns:core="http://icsharpcode.net/sharpdevelop/core"
	AllowsTransparency="True"
>
	<Popup.Resources>
		<ResourceDictionary>
			<ResourceDictionary.MergedDictionaries>
				<ResourceDictionary Source="VisualizerPicker.xaml" />
			</ResourceDictionary.MergedDictionaries>
			
			<LinearGradientBrush x:Key="OrangeBrushKey" EndPoint="0,1" StartPoint="0,0">
				<LinearGradientBrush.GradientStops>
					<GradientStop Offset="0" Color="White" />
					<GradientStop Offset="0.5" Color="Orange" />
					<GradientStop Offset="1" Color="Orange" />
				</LinearGradientBrush.GradientStops>
			</LinearGradientBrush>
			
			<LinearGradientBrush x:Key="OrangePressedBrushKey" EndPoint="0,1" StartPoint="0,0">
				<LinearGradientBrush.GradientStops>
					<GradientStop Offset="1" Color="White" />
					<GradientStop Offset="0.5" Color="Orange" />
					<GradientStop Offset="0" Color="Orange" />
				</LinearGradientBrush.GradientStops>
			</LinearGradientBrush>
			
			<LinearGradientBrush x:Key="SilverBrushKey" EndPoint="0,1" StartPoint="0,0">
				<LinearGradientBrush.GradientStops>
					<GradientStop Offset="0" Color="White" />
					<GradientStop Offset="0.5" Color="LightGray" />
					<GradientStop Offset="1" Color="LightGray" />
				</LinearGradientBrush.GradientStops>
			</LinearGradientBrush>
			
			<LinearGradientBrush x:Key="SilverPressedBrushKey" EndPoint="0,1" StartPoint="0,0">
				<LinearGradientBrush.GradientStops>
					<GradientStop Offset="1" Color="White" />
					<GradientStop Offset="0.5" Color="LightGray" />
					<GradientStop Offset="0" Color="LightGray" />
				</LinearGradientBrush.GradientStops>
			</LinearGradientBrush>
			
			<ControlTemplate x:Key="CloseButtonTemplate" TargetType="Button">
				<Border Width="16" Height="16" Name="TheBorder" CornerRadius="2,2,0,0" BorderThickness="1" BorderBrush="Black" Background="{StaticResource SilverPressedBrushKey}">
					<Canvas>
						<Line X1="3.5" X2="10.5" Y1="3.5" Y2="10.5" Stroke="Black" StrokeThickness="2"/>
						<Line X1="3.5" X2="10.5" Y1="10.5" Y2="3.5" Stroke="Black" StrokeThickness="2"/>
					</Canvas>
				</Border>
				<ControlTemplate.Triggers>
					<Trigger Property="UIElement.IsMouseOver" Value="true">
						<Setter TargetName="TheBorder" Property="Background" Value="{StaticResource OrangeBrushKey}"/>
						<Setter TargetName="TheBorder" Property="BorderBrush" Value="Silver"/>
					</Trigger>
					<Trigger Property="ButtonBase.IsPressed" Value="True">
						<Setter TargetName="TheBorder" Property="Background" Value="{StaticResource OrangePressedBrushKey}"/>
						<Setter TargetName="TheBorder" Property="BorderBrush" Value="Silver"/>
					</Trigger>
				</ControlTemplate.Triggers>
			</ControlTemplate>
			
			<ControlTemplate x:Key="PinButtonTemplate" TargetType="Button">
				<Border Width="16" Height="16" Name="TheBorder" CornerRadius="3" BorderThickness="1" BorderBrush="Black" Background="{StaticResource SilverPressedBrushKey}">
					<Canvas Name="TheCanvas">
						<Line X1="4" X2="10" Y1="2" Y2="2" Stroke="Black" StrokeThickness="1"/>
						<Line X1="9" X2="9" Y1="2" Y2="8" Stroke="Black" StrokeThickness="1"/>
						<Line X1="2" X2="12" Y1="8" Y2="8" Stroke="Black" StrokeThickness="1"/>
						<Rectangle Fill="Black" Width="2" Height="5" Canvas.Left="4" Canvas.Top="3"/>
						<Line X1="7" X2="7" Y1="9" Y2="12" Stroke="Black" StrokeThickness="1"/>
					</Canvas>
				</Border>
				<ControlTemplate.Triggers>
					<Trigger Property="UIElement.IsMouseOver" Value="true">
						<Setter TargetName="TheBorder" Property="Background" Value="{StaticResource OrangeBrushKey}"/>
						<Setter TargetName="TheBorder" Property="BorderBrush" Value="Silver"/>
					</Trigger>
					<Trigger Property="ButtonBase.IsPressed" Value="True">
						<Setter TargetName="TheBorder" Property="Background" Value="{StaticResource OrangePressedBrushKey}"/>
						<Setter TargetName="TheBorder" Property="BorderBrush" Value="Silver"/>
					</Trigger>
				</ControlTemplate.Triggers>
			</ControlTemplate>
			
			<SolidColorBrush x:Key="MouseOverPinBrush" Color="Black" />
			
			<Style TargetType="{x:Type TextBox}" x:Key="TextStyle">
				<Setter Property="OverridesDefaultStyle" Value="True" />
				<Setter Property="VerticalAlignment" Value="Center" />
				<Setter Property="FontFamily" Value="Khmer UI" />
				<Setter Property="FontSize" Value="12" />
				<Setter Property="KeyboardNavigation.TabNavigation" Value="None" />
				<Setter Property="FocusVisualStyle" Value="{x:Null}" />
				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="{x:Type TextBoxBase}">
							<Border Name="Border" Background="Transparent" BorderBrush="Transparent" BorderThickness="0">
								<ScrollViewer Margin="0" Name="PART_ContentHost" />
							</Border>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style>
			
			<Style x:Key="PinThumbStyle" TargetType="Thumb">
				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="Thumb">
							<StackPanel x:Name="Container"/>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style>
			
			<core:ContextMenuBuilder x:Key="menuBuilder" />
		
		</ResourceDictionary>
	</Popup.Resources>
	<StackPanel Orientation="Horizontal">
		<DataGrid
			VerticalScrollBarVisibility="Disabled"
			HorizontalScrollBarVisibility="Disabled"
			GridLinesVisibility="None"
			RowHeight="18"
			MaxHeight="202"
			SelectionMode="Single"
			SelectionUnit="FullRow"
			x:Name="dataGrid"
			AutoGenerateColumns="False"
			ScrollViewer.ScrollChanged="DataGrid_ScrollChanged"
			CanUserAddRows="False"
			HeadersVisibility="None"
			BorderBrush="Gray"
			BorderThickness="1">
			<DataGrid.Background>
				<LinearGradientBrush StartPoint="0,-0.03" EndPoint="0,1">
					<GradientStop Color="White"/>
					<GradientStop Color="#FFFAFCFE" Offset="0.983"/>
					<GradientStop Color="#FFECF7FC" Offset="0.07"/>
					<GradientStop Color="#FFEEF7FA" Offset="0.436"/>
				</LinearGradientBrush>
			</DataGrid.Background>
			<DataGrid.RowStyle>
				<Style TargetType="{x:Type DataGridRow}">
					<Setter Property="Background" Value="Transparent"></Setter>
					<Style.Triggers>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter Property="Background" Value="#FFE2F6FE" />
						</Trigger>
					</Style.Triggers>
				</Style>
			</DataGrid.RowStyle>
			<DataGrid.CellStyle>
				<Style TargetType="{x:Type DataGridCell}">
					<Setter Property="Focusable" Value="false" />
					<!-- Focusable=true blocks shortcuts if cell is focused -->
					<Setter Property="BorderThickness" Value="0" />
					<Style.Triggers>
						<Trigger Property="IsSelected" Value="True">
							<!-- disable selection highlight -->
							<Setter Property="Foreground" Value="Black" />
							<Setter Property="Background" Value="{x:Null}" />
						</Trigger>
					</Style.Triggers>
				</Style>
			</DataGrid.CellStyle>
			<DataGrid.Columns>
				<!-- "Plus" expander -->
				<DataGridTemplateColumn>
					<DataGridTemplateColumn.CellTemplate>
						<DataTemplate>
							<Grid Background="White">
								<StackPanel VerticalAlignment="Center">
									<ToggleButton
										x:Name="btnExpander"
										Click="Expand_Click"
										Padding="0"
										Margin="0"
										Focusable="False"
										Width="19"
										Height="13"
									>
										<ToggleButton.Template>
											<ControlTemplate TargetType="{x:Type ToggleButton}">
												<Border Width="19" Height="13" Background="Transparent">
													<Border Width="9"
													        Height="9"
													        BorderThickness="1"
													        BorderBrush="#FF7898B5"
													        CornerRadius="1"
													        SnapsToDevicePixels="true">
														<Border.Background>
															<LinearGradientBrush StartPoint="0,0" EndPoint="1,1">
																<LinearGradientBrush.GradientStops>
																	<GradientStop Color="White" Offset=".2"/>
																	<GradientStop Color="#FFC0B7A6" Offset="1"/>
																</LinearGradientBrush.GradientStops>
															</LinearGradientBrush>
														</Border.Background>
														<Path x:Name="ExpandPath"
														      Margin="1,1,1,1"
														      Fill="Black"
														      Data="M 0 2 L 0 3 L 2 3 L 2 5 L 3 5 L 3 3 L 5 3 L 5 2 L 3 2 L 3 0 L 2 0 L 2 2 Z"/>
													</Border>
												</Border>
												<ControlTemplate.Triggers>
													<Trigger Property="IsChecked" Value="True">
														<Setter Property="Data" TargetName="ExpandPath" Value="M 0 2 L 0 3 L 5 3 L 5 2 Z"/>
													</Trigger>
												</ControlTemplate.Triggers>
											</ControlTemplate>
										</ToggleButton.Template>
									</ToggleButton>
								</StackPanel>
							</Grid>
							<DataTemplate.Triggers>
								<DataTrigger Binding="{Binding HasChildren}" Value="False">
									<Setter TargetName="btnExpander" Property="Visibility" Value="Collapsed"/>
								</DataTrigger>
							</DataTemplate.Triggers>
						</DataTemplate>
					</DataGridTemplateColumn.CellTemplate>
				</DataGridTemplateColumn>
				<!-- Icon -->
				<DataGridTemplateColumn>
					<DataGridTemplateColumn.CellTemplate>
						<DataTemplate>
							<Image Source="{Binding Image.ImageSource}"></Image>
						</DataTemplate>
					</DataGridTemplateColumn.CellTemplate>
				</DataGridTemplateColumn>
				<!-- Name -->
				<DataGridTemplateColumn MinWidth="20" Header="Name">
					<DataGridTemplateColumn.CellTemplate>
						<DataTemplate>
							<Border BorderBrush="#FFDDDDDD"  BorderThickness="0 0 1 0">
								<TextBlock Margin="6 0" Text="{Binding Path=Name, Mode=OneWay}" VerticalAlignment="Top"></TextBlock>
							</Border>
						</DataTemplate>
					</DataGridTemplateColumn.CellTemplate>
				</DataGridTemplateColumn>
				<!-- Type -->
				<DataGridTemplateColumn MinWidth="20" Header="Type">
					<DataGridTemplateColumn.CellTemplate>
						<DataTemplate>
							<Border BorderBrush="#FFDDDDDD"  BorderThickness="0 0 1 0">
								<TextBlock Margin="6 0" Text="{Binding Path=Type, Mode=OneWay}" VerticalAlignment="Top"></TextBlock>
							</Border>
						</DataTemplate>
					</DataGridTemplateColumn.CellTemplate>
				</DataGridTemplateColumn>
				<!-- Visualizer picker  -->
				<DataGridTemplateColumn>
					<DataGridTemplateColumn.CellTemplate>
						<DataTemplate>
							<debugging:VisualizerPicker Focusable="False" x:Name="visPicker" ItemsSource="{Binding Path=VisualizerCommands, Mode=OneWay}" Margin="4 0 0 0"></debugging:VisualizerPicker>
							<DataTemplate.Triggers>
								<DataTrigger Binding="{Binding HasVisualizerCommands}" Value="False">
									<Setter TargetName="visPicker" Property="Visibility" Value="Collapsed"/>
								</DataTrigger>
							</DataTemplate.Triggers>
						</DataTemplate>
					</DataGridTemplateColumn.CellTemplate>
				</DataGridTemplateColumn>
				<!-- Text (value) -->
				<DataGridTemplateColumn MinWidth="20" Header="Text">
					<DataGridTemplateColumn.CellTemplate>
						<DataTemplate>
							<TextBox
								x:Name="valueText"
								Style="{StaticResource TextStyle}"
								IsEnabled="{Binding CanSetValue}"
								ContextMenuService.ShowOnDisabled="True"
								Text="{Binding Value}">
								<TextBox.ContextMenu>
									<MultiBinding Converter="{StaticResource menuBuilder}">
										<Binding Path="ContextMenuAddInTreeEntry" />
										<Binding />
									</MultiBinding>
								</TextBox.ContextMenu>
							</TextBox>
						</DataTemplate>
					</DataGridTemplateColumn.CellTemplate>
				</DataGridTemplateColumn>
			</DataGrid.Columns>
		</DataGrid>
		<!--		<StackPanel Opacity="0.2" Name="SideButtons" Margin="3">
			<Button
				Name="CloseButton"
				Click="CloseButton_Click"
				Template="{StaticResource CloseButtonTemplate}" />
			<Button
				Name="UnpinButton"
				Template="{StaticResource PinButtonTemplate}" />
		</StackPanel>-->
	</StackPanel>
</Popup>