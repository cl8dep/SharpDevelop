<AddIn name        = "XAML Binding"
       author      = "Siegfried Pammer"
       copyright   = "prj:///doc/copyright.txt"
       url         = "http://icsharpcode.net"
       description = "Enables code-completion for xaml files."
       addInManagerHidden = "preinstalled">
	
	<!--
		This file is unrelated to the WPF Designer, it is a language binding for .xaml files.
		It allows using Go to definition, find references, code completion in .xaml files.
	-->
	
	<Manifest>
		<Identity name = "ICSharpCode.XamlBinding"/>
		<Dependency addin = "ICSharpCode.XmlEditor" requirePreload = "true"/>
	</Manifest>
	
	<Runtime>
		<Import assembly = "ICSharpCode.XamlBinding.dll"/>
	</Runtime>
	
	<Path name = "/Workspace/Icons">
		<Icon id         = "XamlFileIcon"
		      extensions = ".xaml"
		      resource   = "FileIcons.XmlIcon" />
	</Path>
	
	<Path name = "/SharpDevelop/Workbench/FileFilter">
		<FileFilter id = "Xaml"
		            insertbefore="AllFiles"
		            name = "Xaml files (*.xaml)"
		            extensions = "*.xaml"
		            mimeType = "text/xml"/>
	</Path>
	
	<Path name = "/SharpDevelop/Parser">
		<Parser id    = "XAML"
		        supportedfilenamepattern = "\.(xaml)$"
		        class = "ICSharpCode.XamlBinding.XamlParser"/>
	</Path>
	
	<Path name = "/SharpDevelop/ViewContent/TextEditor/CodeCompletion">
		<CodeCompletionBinding id = "XAML" extensions = ".xaml" class = "ICSharpCode.XamlBinding.XamlCodeCompletionBinding"/>
	</Path>
	
	<Path name="/SharpDevelop/Workbench/LanguageBindings">
		<LanguageBinding
			id="XAML"
			class="ICSharpCode.XamlBinding.XamlLanguageBinding"
			extensions=".xaml" />
	</Path>
	
	<Path name="/SharpDevelop/ViewContent/TextEditor/Extensions">
		<TextEditorExtension
			id="XAML"
			class="ICSharpCode.XamlBinding.XamlTextEditorExtension"
			extensions=".xaml" />
	</Path>
	
	<Path name="/SharpDevelop/Workbench/ProjectBehaviors">
		<Condition name="ProjectBehaviorSupported" guid="{A1591282-1198-4647-A2B1-27E5FF5F6F3B}">
			<Class id="SilverlightBehavior" class="ICSharpCode.XamlBinding.SilverlightBehavior" />
		</Condition>
		<Class id="XamlBehavior" class="ICSharpCode.XamlBinding.XamlBehavior" />
	</Path>
	
	<!-- Options panel -->
	<Path name="/SharpDevelop/Dialogs/OptionsDialog/TextEditorOptions">
		<OptionPanel id = "XamlCompletionPanel"
		             insertafter = "Markers"
		             label = "${res:AddIns.XamlBinding.Options.Title}"
		             class = "ICSharpCode.XamlBinding.Options.CodeCompletion" />
	</Path>
	
	<!-- TODO reimplement as context actions
	<Path name="/SharpDevelop/Workbench/MainMenu">
		<ComplexCondition>
			<And>
				<Condition name="ActiveContentExtension" activeextension=".xaml" />
				<Condition name="WindowActive" activewindow="ICSharpCode.SharpDevelop.Editor.ITextEditor" />
			</And>
			<MenuItem id="XamlRefactoring" insertafter="Refactor" insertbefore="Project" label="${res:XML.MainMenu.RefactorMenu}" type="Menu">
				<MenuItem id="RemoveMargin"
				          class="ICSharpCode.XamlBinding.PowerToys.Commands.RemoveMarginCommand"
				          label="${res:AddIns.XamlBinding.Menu.RemoveMargin}" />
								<MenuItem id="RemoveUnnecessaryAttributes"
						   class="ICSharpCode.XamlBinding.PowerToys.Commands.RemoveUnnecessaryAttributesCommand"
						   label="${res:AddIns.XamlBinding.Menu.RemoveUnnecessaryAttributes}" />
				<MenuItem type="Separator" />
				<MenuItem id="ExtractPropertiesAsStyle"
				          class="ICSharpCode.XamlBinding.PowerToys.Commands.ExtractPropertiesAsStyleCommand"
				          label="${res:AddIns.XamlBinding.Menu.ExtractPropertiesAsStyle}" />
				<MenuItem id="GroupInto" label="${res:AddIns.XamlBinding.Menu.GroupInto}" type="Menu">
					<MenuItem id="GroupIntoBorder" label="Border" type="Menu">
						<MenuItem id="GroupIntoBorderWithoutChild"
						          label="Border"
						          class="ICSharpCode.XamlBinding.PowerToys.Commands.GroupIntoBorderWithoutChild" />
						<MenuItem id="GroupIntoBorderWithGrid"
						          label="Border With Root Grid"
						          class="ICSharpCode.XamlBinding.PowerToys.Commands.GroupIntoBorderWithGrid" />
						<MenuItem id="GroupIntoBorderWithStackPanelVertical"
						          label="Border With Root StackPanel - Vertical"
						          class="ICSharpCode.XamlBinding.PowerToys.Commands.GroupIntoBorderWithStackPanelVertical" />
						<MenuItem id="GroupIntoBorderWithStackPanelHorizontal"
						          label="Border With Root StackPanel - Horizontal"
						          class="ICSharpCode.XamlBinding.PowerToys.Commands.GroupIntoBorderWithStackPanelHorizontal" />
					</MenuItem>
					<MenuItem id="GroupIntoCanvas"
					          label="Canvas"
					          class="ICSharpCode.XamlBinding.PowerToys.Commands.GroupIntoCanvas" />
					<MenuItem id="GroupIntoDockPanel"
					          label="DockPanel"
					          class="ICSharpCode.XamlBinding.PowerToys.Commands.GroupIntoDockPanel" />
					<MenuItem id="GroupIntoGrid"
					          label="Grid"
					          class="ICSharpCode.XamlBinding.PowerToys.Commands.GroupIntoGrid" />
					<MenuItem id="GroupIntoGroupBoxWithGrid"
					          label="GroupBox With Root Grid"
					          class="ICSharpCode.XamlBinding.PowerToys.Commands.GroupIntoGroupBoxWithGrid" />
					<MenuItem id="GroupIntoScrollViewerWithGrid"
					          label="ScrollViewer With Root Grid"
					          class="ICSharpCode.XamlBinding.PowerToys.Commands.GroupIntoScrollViewerWithGrid" />
					<MenuItem id="GroupIntoStackPanelHorizontal"
					          label="StackPanel - Horizontal"
					          class="ICSharpCode.XamlBinding.PowerToys.Commands.GroupIntoStackPanelHorizontal" />
					<MenuItem id="GroupIntoStackPanelVertical"
					          label="StackPanel - Vertical"
					          class="ICSharpCode.XamlBinding.PowerToys.Commands.GroupIntoStackPanelVertical" />
					<MenuItem id="GroupIntoUniformGrid"
					          label="UniformGrid"
					          class="ICSharpCode.XamlBinding.PowerToys.Commands.GroupIntoUniformGrid" />
					<MenuItem id="GroupIntoViewbox"
					          label="Viewbox"
					          class="ICSharpCode.XamlBinding.PowerToys.Commands.GroupIntoViewbox" />
					<MenuItem id="GroupIntoWrapPanel"
					          label="WrapPanel"
					          class="ICSharpCode.XamlBinding.PowerToys.Commands.GroupIntoWrapPanel" />
				</MenuItem>
				<MenuItem id="EditGridColumnsAndRows"
				          class="ICSharpCode.XamlBinding.PowerToys.Commands.EditGridColumnsAndRowsCommand"
				          label="${res:AddIns.XamlBinding.Menu.EditGridColumnsAndRows}" />
								<MenuItem id="CreateBusinessForm"
						   class="ICSharpCode.XamlBinding.PowerToys.Commands.CreateBusinessFormFromClassCommand"
						   label="${res:AddIns.XamlBinding.Menu.CreateBusinessFormFromClass}" />
			</MenuItem>
		</ComplexCondition>
	</Path>
	-->
</AddIn>
