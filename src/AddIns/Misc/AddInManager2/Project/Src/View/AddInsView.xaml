<UserControl
	x:Class="ICSharpCode.AddInManager2.View.AddInsView"
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:core="clr-namespace:ICSharpCode.Core.Presentation;assembly=ICSharpCode.Core.Presentation"
	xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
	xmlns:aimview="clr-namespace:ICSharpCode.AddInManager2.View"
	xmlns:aimvm="clr-namespace:ICSharpCode.AddInManager2.ViewModel"
	mc:Ignorable="d"
	d:DesignHeight="250"
	d:DesignWidth="500">
	
	<UserControl.Resources>
		<aimvm:OpenHyperlinkCommand x:Key="OpenHyperlinkCommand"/>
		<BitmapImage x:Key="DefaultPackageIcon"
		             UriSource="pack://application:,,,/ICSharpCode.AddInManager2;component/Resources/packageicon.png"/>
		<BitmapImage x:Key="SmallPackageIcon"
		             UriSource="pack://application:,,,/ICSharpCode.AddInManager2;component/Resources/packageicon_small.png"/>
		<BitmapImage x:Key="SDPackageIcon"
		             UriSource="pack://application:,,,/ICSharpCode.AddInManager2;component/Resources/sd_packageicon.png"/>
		<BitmapImage x:Key="SmallExternalAddInIcon"
		             UriSource="pack://application:,,,/ICSharpCode.AddInManager2;component/Resources/external_addin_small.png"/>
		<BitmapImage x:Key="InstalledTickIcon"
		             UriSource="pack://application:,,,/ICSharpCode.AddInManager2;component/Resources/accept.png"/>
		<BitmapImage x:Key="SearchIcon"
		             UriSource="pack://application:,,,/ICSharpCode.AddInManager2;component/Resources/magnifier.png"/>
		<BooleanToVisibilityConverter x:Key="BoolToVisibility"/>
		
		<DataTemplate x:Key="PackageSourceComboBoxItemTemplate">
			<TextBlock Text="{Binding Path=NameWithHighlight}">
				<TextBlock.Style>
					<Style TargetType="TextBlock">
						<Style.Triggers>
							<DataTrigger Binding="{Binding HasHighlightCount}" Value="True">
								<Setter Property="FontWeight" Value="Bold" />
							</DataTrigger>
						</Style.Triggers>
					</Style>
				</TextBlock.Style>
			</TextBlock>
		</DataTemplate>
		
		<Style x:Key="AddInImageStyle" TargetType="{x:Type Image}">
			<Style.Triggers>
				<DataTrigger Binding="{Binding IsOffline}" Value="False">
					<Setter Property="Source" Value="{Binding Path=IconUrl, TargetNullValue={StaticResource DefaultPackageIcon}}" />
				</DataTrigger>
				<DataTrigger Binding="{Binding IsOffline}" Value="True">
					<Setter Property="Source" Value="{Binding Path=IconUrl, TargetNullValue={StaticResource SDPackageIcon}}" />
				</DataTrigger>
				<DataTrigger Binding="{Binding IsEnabled}" Value="False">
					<Setter Property="Opacity" Value="0.5" />
				</DataTrigger>
			</Style.Triggers>
		</Style>
		
		<Style x:Key="AddInOnlineStateImageStyle" TargetType="{x:Type Image}">
			<Setter Property="Source" Value="{StaticResource SmallPackageIcon}" />
			<Setter Property="Visibility" Value="{Binding Path=HasNuGetConnection, Converter={StaticResource BoolToVisibility}}" />
			<Style.Triggers>
				<DataTrigger Binding="{Binding IsEnabled}" Value="False">
					<Setter Property="Opacity" Value="0.5" />
				</DataTrigger>
			</Style.Triggers>
		</Style>
		
		<Style x:Key="AddInExternalStateImageStyle" TargetType="{x:Type Image}">
			<Setter Property="Source" Value="{StaticResource SmallExternalAddInIcon}" />
			<Setter Property="Visibility" Value="{Binding Path=IsExternallyReferenced, Converter={StaticResource BoolToVisibility}}" />
			<Style.Triggers>
				<DataTrigger Binding="{Binding IsEnabled}" Value="False">
					<Setter Property="Opacity" Value="0.5" />
				</DataTrigger>
			</Style.Triggers>
		</Style>
		
		<Style x:Key="InstalledTickImageStyle" TargetType="{x:Type Image}">
			<Setter Property="Source" Value="{StaticResource InstalledTickIcon}" />
			<Setter Property="Visibility" Value="Collapsed" />
			<Style.Triggers>
				<MultiDataTrigger>
					<MultiDataTrigger.Conditions>
						<Condition Binding="{Binding IsOffline}" Value="False" />
						<Condition Binding="{Binding IsInstalled}" Value="True" />
					</MultiDataTrigger.Conditions>
					<Setter Property="Visibility" Value="Visible" />
				</MultiDataTrigger>
			</Style.Triggers>
		</Style>
		
		<Style x:Key="addInListButtonStyle" TargetType="{x:Type Button}" BasedOn="{x:Static core:GlobalStyles.ButtonStyle}">
			<Setter Property="Visibility" Value="Collapsed" />
			<Setter Property="HorizontalAlignment" Value="Left" />
			<Setter Property="Margin" Value="2,2,2,2" />
			<Style.Triggers>
				<MultiDataTrigger>
					<MultiDataTrigger.Conditions>
						<Condition Binding="{Binding Path=IsSelected, RelativeSource={RelativeSource AncestorType={x:Type ListBoxItem}}}" Value="True" />
						<Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsEnabled}" Value="True" />
					</MultiDataTrigger.Conditions>
					<Setter Property="Visibility" Value="Visible" />
				</MultiDataTrigger>
			</Style.Triggers>
		</Style>
		
		<Style x:Key="addInDetailsButtonStyle" TargetType="{x:Type Button}" BasedOn="{x:Static core:GlobalStyles.ButtonStyle}">
			<Setter Property="Visibility" Value="Collapsed" />
			<Style.Triggers>
				<DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsEnabled}" Value="True">
					<Setter Property="Visibility" Value="Visible" />
				</DataTrigger>
			</Style.Triggers>
		</Style>
		
		<Style x:Key="PackageSourceComboBoxStyle" TargetType="{x:Type ComboBox}">
			<!--			<Style.Triggers>
				<DataTrigger Binding="{Binding IsReadingPackages}" Value="True">
					<Setter Property="IsEnabled" Value="False" />
				</DataTrigger>
			</Style.Triggers>-->
		</Style>
		
		<Style x:Key="packageListBoxItemContainerStyle" TargetType="{x:Type ListBoxItem}">
			<Setter Property="IsSelected" Value="{Binding Mode=TwoWay, Path=IsSelected}"/>
		</Style>
		
		<DataTemplate x:Key="PackageListBoxItemTemplate">
			<Grid>
				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="60"/>
					<ColumnDefinition Width="*"/>
				</Grid.ColumnDefinitions>
				
				<!--<Grid.RowDefinitions>
					<RowDefinition Height="60"/>
				</Grid.RowDefinitions>-->
				
				<Image
					Grid.Column="0"
					Height="32"
					VerticalAlignment="Top"
					Style="{StaticResource AddInImageStyle}" />
				<Image
					Grid.Column="0"
					Height="16"
					Margin="36,0,0,0"
					VerticalAlignment="Top"
					Style="{StaticResource AddInOnlineStateImageStyle}" />
				<Image
					Grid.Column="0"
					Height="16"
					Margin="36,0,0,0"
					VerticalAlignment="Top"
					Style="{StaticResource AddInExternalStateImageStyle}" />
				<Image
					Grid.Column="0"
					VerticalAlignment="Top"
					HorizontalAlignment="Right"
					Height="16"
					Width="16"
					Style="{StaticResource InstalledTickImageStyle}"
					Margin="36,0,0,0"/>
				
				<Grid Grid.Column="1" Margin="0,0,0,0" HorizontalAlignment="Left">
					<Grid.RowDefinitions>
						<RowDefinition Height="Auto" />
						<RowDefinition Height="Auto" />
					</Grid.RowDefinitions>
					<StackPanel Grid.Row="0" Margin="4,4,4,4" HorizontalAlignment="Left">
						<TextBlock
							x:Name="nameTextBlock"
							Text="{Binding Path=Name}"
							FontWeight="Bold"
							TextWrapping="Wrap"
							Margin="0,0,0,6"/>
						<TextBlock
							x:Name="summaryTextBlock"
							Text="{Binding Path=Summary}"
							TextWrapping="Wrap"
							TextTrimming="CharacterEllipsis"/>
					</StackPanel>
					<StackPanel Grid.Row="1" Margin="2,2,2,2" Orientation="Horizontal">
						<Button
							x:Name="addPackageButton"
							Content="{core:Localize AddInManager.ActionInstall}"
							IsDefault="True"
							Command="{Binding Path=AddPackageCommand}"
							Style="{StaticResource addInListButtonStyle}"/>
						<Button
							x:Name="updatePackageButton"
							Content="{core:Localize AddInManager.ActionUpdate}"
							IsDefault="True"
							Command="{Binding Path=UpdatePackageCommand}"
							Style="{StaticResource addInListButtonStyle}"/>
						<Button
							x:Name="disablePackageButton"
							Content="{core:Localize AddInManager.ActionDisable}"
							IsDefault="True"
							Command="{Binding Path=DisablePackageCommand}"
							Style="{StaticResource addInListButtonStyle}"/>
						<Button
							x:Name="removePackageButton"
							Content="{core:Localize AddInManager.ActionUninstall}"
							Command="{Binding Path=RemovePackageCommand}"
							Style="{StaticResource addInListButtonStyle}"/>
						<Button
							x:Name="cancelInstallationButton"
							Content="{core:Localize AddInManager.ActionCancelInstallation}"
							Command="{Binding Path=CancelInstallationCommand}"
							Style="{StaticResource addInListButtonStyle}"/>
						<Button
							x:Name="cancelUpdateButton"
							Content="{core:Localize AddInManager.ActionCancelUpdate}"
							Command="{Binding Path=CancelUpdateCommand}"
							Style="{StaticResource addInListButtonStyle}"/>
						<Button
							x:Name="cancelUninstallationButton"
							Content="{core:Localize AddInManager.ActionCancelDeinstallation}"
							Command="{Binding Path=CancelUninstallationCommand}"
							Style="{StaticResource addInListButtonStyle}"/>
					</StackPanel>
				</Grid>
			</Grid>
			
			<DataTemplate.Triggers>
				<!-- Disabled AddIns -->
				<DataTrigger Binding="{Binding Path=IsEnabled}" Value="False">
					<Setter
						TargetName="disablePackageButton"
						Property="Content"
						Value="Enable" />
					<Setter
						TargetName="nameTextBlock"
						Property="Foreground"
						Value="Gray"/>
					<Setter
						TargetName="summaryTextBlock"
						Property="Foreground"
						Value="Gray"/>
					<Setter
						TargetName="nameTextBlock"
						Property="TextDecorations"
						Value="Strikethrough"/>
				</DataTrigger>
				
				<!-- AddIns marked for installation -->
				<DataTrigger Binding="{Binding Path=IsAdded}" Value="True">
					<Setter
						TargetName="nameTextBlock"
						Property="FontStyle"
						Value="Italic"/>
					<Setter
						TargetName="summaryTextBlock"
						Property="FontStyle"
						Value="Italic"/>
				</DataTrigger>
				
				<!-- AddIns marked for uninstallation -->
				<DataTrigger Binding="{Binding Path=IsRemoved}" Value="True">
					<Setter
						TargetName="nameTextBlock"
						Property="FontStyle"
						Value="Italic"/>
					<Setter
						TargetName="summaryTextBlock"
						Property="FontStyle"
						Value="Italic"/>
				</DataTrigger>
				
				<!-- AddIns with dependency conflicts -->
				<MultiDataTrigger>
					<MultiDataTrigger.Conditions>
						<Condition
							Binding="{Binding Path=IsSelected, RelativeSource={RelativeSource AncestorType={x:Type ListBoxItem}}}"
							Value="False"/>
						<Condition
							Binding="{Binding Path=HasDependencyConflicts}"
							Value="True"/>
					</MultiDataTrigger.Conditions>
					<Setter
						TargetName="nameTextBlock"
						Property="Foreground"
						Value="Red"/>
					<Setter
						TargetName="summaryTextBlock"
						Property="Foreground"
						Value="Red"/>
				</MultiDataTrigger>
			</DataTemplate.Triggers>
		</DataTemplate>
		
		<DataTemplate x:Key="PackageTemplate">
			<ScrollViewer
				VerticalScrollBarVisibility="Auto">
				<StackPanel Margin="8, 4">
					<StackPanel
						Orientation="Horizontal"
						Margin="0,4,0,8">
						<TextBlock
							Text="{Binding Name}"
							FontWeight="Bold"
							FontSize="14"/>
					</StackPanel>
					<StackPanel
						Orientation="Horizontal"
						Margin="0, 4">
						<TextBlock
							Text="{core:Localize AddInManager2.Details.CreatedBy}"
							FontWeight="Bold"/>
						<ItemsControl
							Margin="4, 0"
							ItemsSource="{Binding Path=Authors}"/>
					</StackPanel>
					<StackPanel
						Orientation="Horizontal"
						Visibility="{Binding Path=HasVersion, Converter={StaticResource BoolToVisibility}}"
						Margin="0, 4">
						<TextBlock
							Text="{core:Localize AddInManager2.Details.Version}"
							FontWeight="Bold"
							Margin="0, 0, 4, 0"/>
						<TextBlock Text="{Binding Path=Version}"/>
					</StackPanel>
					<StackPanel
						Orientation="Horizontal"
						Visibility="{Binding Path=HasOldVersion, Converter={StaticResource BoolToVisibility}}"
						Margin="0, 4">
						<TextBlock
							Text="{core:Localize AddInManager2.Details.InstalledVersion}"
							FontWeight="Bold"
							Margin="0, 0, 4, 0"/>
						<TextBlock Text="{Binding Path=OldVersion}"/>
					</StackPanel>
					<StackPanel
						Orientation="Horizontal"
						Visibility="{Binding Path=HasNewVersion, Converter={StaticResource BoolToVisibility}}"
						Margin="0, 4">
						<TextBlock
							Text="{core:Localize AddInManager2.Details.NewVersion}"
							FontWeight="Bold"
							Margin="0, 0, 4, 0"/>
						<TextBlock Text="{Binding Path=Version}"/>
					</StackPanel>
					<StackPanel
						Orientation="Horizontal"
						Visibility="{Binding Path=HasLastUpdated, Converter={StaticResource BoolToVisibility}}"
						Margin="0, 4">
						<TextBlock
							Margin="0, 0, 4, 0"
							Text="{core:Localize AddInManager2.Details.LastUpdated}"
							FontWeight="Bold"/>
						<TextBlock Text="{Binding Path=LastUpdated, StringFormat=d}"/>
					</StackPanel>
					<StackPanel
						Orientation="Horizontal"
						Visibility="{Binding Path=HasDownloadCount, Converter={StaticResource BoolToVisibility}}"
						Margin="0, 4">
						<TextBlock
							Margin="0, 0, 4, 0"
							Text="{core:Localize AddInManager2.Details.DownloadCount}"
							FontWeight="Bold"/>
						<TextBlock Text="{Binding Path=DownloadCount}"/>
					</StackPanel>
					<StackPanel
						Visibility="Collapsed"
						Orientation="Horizontal"
						Margin="0, 4">
						<TextBlock
							Margin="0, 0, 4, 0"
							Text="{core:Localize AddInManager2.Details.Rating}"
							FontWeight="Bold"/>
						<TextBlock Text="{Binding Path=Rating}"/>
					</StackPanel>
					<TextBlock
						Visibility="{Binding Path=HasLicenseUrl, Converter={StaticResource BoolToVisibility}}">
						<Hyperlink
							Command="{StaticResource OpenHyperlinkCommand}"
							CommandParameter="{Binding Path=LicenseUrl}">
							<TextBlock Text="{core:Localize AddInManager2.Details.ViewLicenseTerms}"/>
						</Hyperlink>
					</TextBlock>
					<TextBlock
						Visibility="{Binding Path=HasProjectUrl, Converter={StaticResource BoolToVisibility}}">
						<Hyperlink
							Command="{StaticResource OpenHyperlinkCommand}"
							CommandParameter="{Binding Path=ProjectUrl}">
							<TextBlock Text="{core:Localize AddInManager2.Details.MoreInformation}"/>
						</Hyperlink>
					</TextBlock>
					<TextBlock
						Visibility="{Binding Path=HasReportAbuseUrl, Converter={StaticResource BoolToVisibility}}">
						<Hyperlink
							Command="{StaticResource OpenHyperlinkCommand}"
							CommandParameter="{Binding Path=ReportAbuseUrl}">
							<TextBlock Text="{core:Localize AddInManager2.Details.ReportAbuse}"/>
						</Hyperlink>
					</TextBlock>
					<TextBlock
						Margin="0, 4"
						TextWrapping="Wrap"
						Text="{Binding Path=Description}"/>
					<StackPanel Margin="0, 4">
						<StackPanel Orientation="Horizontal">
							<TextBlock
								Text="{core:Localize AddInManager2.Details.Dependencies}"
								Margin="0, 0, 4, 0"
								FontWeight="Bold"/>
							<TextBlock
								Text="None"
								Visibility="{Binding Path=HasNoDependencies, Converter={StaticResource BoolToVisibility}}"/>
						</StackPanel>
						<ItemsControl
							Margin="4, 4"
							ItemsSource="{Binding Path=Dependencies}"/>
					</StackPanel>
					<Grid
						Visibility="{Binding Path=IsOffline, Converter={StaticResource BoolToVisibility}}"
						Margin="0, 4">
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="Auto" />
							<ColumnDefinition Width="*" />
						</Grid.ColumnDefinitions>
						<TextBlock
							Grid.Column="0"
							Margin="0, 0, 4, 0"
							Text="{core:Localize AddInManager2.Details.FileName}"
							FontWeight="Bold"/>
						<TextBlock Grid.Column="1" Text="{Binding Path=FileName}" TextWrapping="Wrap" />
					</Grid>
					<Grid Margin="0,20,0,0">
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="Auto" />
							<ColumnDefinition Width="*" />
						</Grid.ColumnDefinitions>
						<Button
							x:Name="optionsButton"
							Grid.Column="0"
							Content="{core:Localize AddInManager.Options}"
							Command="{Binding Path=OptionsCommand}"
							Style="{StaticResource addInDetailsButtonStyle}"/>
					</Grid>
				</StackPanel>
			</ScrollViewer>
			
			<DataTemplate.Triggers>
				<DataTrigger
					Binding="{Binding}"
					Value="{x:Null}">
					<Setter
						Property="StackPanel.Visibility"
						Value="Hidden"/>
				</DataTrigger>
			</DataTemplate.Triggers>
		</DataTemplate>
		
		<Style x:Key="allPackagesListBoxStyle" TargetType="ListBox">
			<Setter Property="Visibility" Value="Hidden" />
			<Style.Triggers>
				<DataTrigger Binding="{Binding HasError}" Value="False">
					<Setter Property="Visibility" Value="Visible" />
				</DataTrigger>
			</Style.Triggers>
		</Style>
	</UserControl.Resources>
	
	<Grid>
		<Grid.ColumnDefinitions>
			<ColumnDefinition MinWidth="200"/>
			<ColumnDefinition Width="Auto"/>
			<ColumnDefinition Width=".6*" MinWidth="100"/>
		</Grid.ColumnDefinitions>
		
		<Grid Grid.Column="0">
			<Grid>
				<Grid.RowDefinitions>
					<RowDefinition Height="Auto"/>
					<RowDefinition/>
					<RowDefinition Height="Auto"/>
				</Grid.RowDefinitions>
				
				<Grid
					Visibility="{Binding Path=IsSearchable, Converter={StaticResource BoolToVisibility}}"
					Grid.Row="0">
					<Grid.ColumnDefinitions>
						<ColumnDefinition Width="Auto" />
						<ColumnDefinition />
						<ColumnDefinition Width="Auto"/>
					</Grid.ColumnDefinitions>
					<Grid.RowDefinitions>
						<RowDefinition Height="Auto"/>
						<RowDefinition Height="Auto"/>
					</Grid.RowDefinitions>
					
					<TextBlock
						Grid.Row="1"
						Grid.Column="0"
						VerticalAlignment="Center"
						Margin="2, 0, 5, 2"
						Text="{core:Localize AddInManager2.AddInsView.Search}" />
					<TextBox
						Grid.Row="1"
						Grid.Column="1"
						Margin="2, 0, 0, 2"
						Text="{Binding Path=SearchTerms, UpdateSourceTrigger=PropertyChanged}">
						<TextBox.InputBindings>
							<KeyBinding
								Key="Enter"
								Command="{Binding Path=SearchCommand}"/>
						</TextBox.InputBindings>
					</TextBox>
					<TextBlock
						Grid.Row="1"
						Grid.Column="2"
						Margin="4">
						<Hyperlink
							TextDecorations="{x:Null}"
							Command="{Binding Path=SearchCommand}">
							<Image
								Source="{StaticResource SearchIcon}"
								Height="16"
								Width="16"/>
						</Hyperlink>
					</TextBlock>
				</Grid>
				
				<Grid Grid.Row="1">
					<ListBox
						x:Name="allPackagesListBox"
						Grid.Row="0"
						SelectedIndex="0"
						IsSynchronizedWithCurrentItem="true"
						ItemTemplate="{StaticResource PackageListBoxItemTemplate}"
						ItemsSource="{Binding Path=AddInPackages}"
						ItemContainerStyle="{StaticResource packageListBoxItemContainerStyle}"
						HorizontalContentAlignment="Stretch"
						ScrollViewer.HorizontalScrollBarVisibility="Disabled"/>
					<TextBlock
						x:Name="ErrorMessageText"
						Grid.Row="0"
						Visibility="{Binding Path=HasError, Converter={StaticResource BoolToVisibility}}"
						Text="{Binding Path=ErrorMessage}"
						TextWrapping="Wrap"
						HorizontalAlignment="Center"
						VerticalAlignment="Center"/>
					<ProgressBar
						Grid.Row="0"
						Height="20"
						Width="100"
						IsIndeterminate="True"
						Visibility="{Binding Path=IsReadingPackages, Converter={StaticResource BoolToVisibility}}"
						HorizontalAlignment="Center"
						VerticalAlignment="Center"/>
					<aimview:PagedResultsView
						x:Name="pagedResultsView"
						Grid.Row="1"
						HorizontalAlignment="Center"
						Visibility="{Binding Path=IsPaged, Converter={StaticResource BoolToVisibility}}"
						DataContext="{Binding}"/>
				</Grid>
				
				<Grid Grid.Row="2">
					<Grid.ColumnDefinitions>
						<ColumnDefinition Width="*" />
						<ColumnDefinition Width="Auto" />
					</Grid.ColumnDefinitions>
					
					<StackPanel Grid.Column="0" Orientation="Vertical">
						<Grid
							Visibility="{Binding Path=HasFilterForPreinstalled, Converter={StaticResource BoolToVisibility}}">
							<CheckBox
								x:Name="preinstalledAddInsCheckBox"
								Margin="4"
								Content="{core:Localize AddInManager2.AddInsView.ShowPreinstalledAddIns}"
								IsChecked="{Binding Path=ShowPreinstalledAddIns, UpdateSourceTrigger=PropertyChanged}"
								Command="{Binding Path=UpdatePreinstalledFilterCommand}" />
						</Grid>
						
						<Grid
							Visibility="{Binding Path=HasFilterForPrereleases, Converter={StaticResource BoolToVisibility}}">
							<CheckBox
								x:Name="prereleaseAddInsCheckBox"
								Margin="4"
								Content="{core:Localize AddInManager2.AddInsView.ShowPrereleaseAddIns}"
								IsChecked="{Binding Path=ShowPrereleases, UpdateSourceTrigger=PropertyChanged}"
								Command="{Binding Path=UpdatePrereleaseFilterCommand}" />
						</Grid>
					</StackPanel>
					
					<Grid Grid.Column="1">
						<Button
							x:Name="installFromFileButton"
							Visibility="{Binding Path=AllowInstallFromArchive, Converter={StaticResource BoolToVisibility}}"
							Content="{core:Localize AddInManager2.AddInsView.InstallFromArchive}"
							Command="{Binding Path=InstallFromArchiveCommand}"
							Style="{StaticResource addInDetailsButtonStyle}"
							Margin="4,4,4,4" />
					</Grid>
				</Grid>
			</Grid>
		</Grid>
		<GridSplitter
			Grid.Column="1"
			Width="5"
			HorizontalAlignment="Stretch"
			VerticalAlignment="Stretch"/>
		<Grid
			Grid.Column="2">
			<Grid.RowDefinitions>
				<RowDefinition Height="Auto"/>
				<RowDefinition />
			</Grid.RowDefinitions>
			<ContentControl
				Grid.Row="1"
				ContentTemplate="{StaticResource PackageTemplate}"
				Content="{Binding ElementName=allPackagesListBox, Path=SelectedItem}"/>
		</Grid>
	</Grid>
</UserControl>